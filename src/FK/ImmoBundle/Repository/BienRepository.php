<?php

namespace FK\ImmoBundle\Repository;

/**
 * BienRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BienRepository extends \Doctrine\ORM\EntityRepository
{

    public function getLocalite()
    {
        $em=$this->getEntityManager()->createQueryBuilder();
        $dql=$em->select('b','l')
        ->from('FKImmoBundle:Bien','b')
        ->leftJoin('b.localite','l')
        ->where('b.localite = l.nomlocal')
        //->setParameter()
        ->getQuery();
        return $dql->getResult();
    }
    public function getType()
    {
        $em=$this->getEntityManager()->createQueryBuilder();
        $dql=$em->select('b','t')
        ->from('FKImmoBundle:Bien','b')
        ->leftJoin('b.type','t')
        ->where('b.type = t.nomtype')
        //->setParameter()
        ->getQuery();
        return $dql->getResult();
    }

    public function findImage()
    {
        $em=$this->getEntityManager()->createQueryBuilder();
        $dql=$em->select ('b','i') 
        ->from('FKImmoBundle:Bien','b')
        ->leftJoin('i.bien','b')
        ->where('i.bien = b.id')
        //->setParameters()
        ->getQuery();
        $image=$dql->getImages();
        
        return $image->getResult();
    }

      public function findBiens($localite = 0, $type = 0, $prixlocation = 0)
    {
        $dql = "SELECT b, i FROM FK\ImmoBundle\Entity\Bien b 
        left Join b.images i Join b.typebien t Join b.localite l WHERE b.etat = 0";

        if ($localite != 0) 
        {
            $dql .= ' AND l.id = :idLoc';
        }
        if ($type != 0) 
        {
            $dql .= ' AND t.id = :idType';
        }
        if ($prixlocation != 0) 
        {
            $dql .= ' AND b.prixlocation BETWEEN :prixMin AND :prixMax';
        }

        $query = $this->getEntityManager()->createQuery($dql);

        if ($localite != 0) 
        {
            $query->setParameter('idLoc', $localite);
        }
        if ($type != 0)
        {
            $query->setParameter('idType', $type);
        }
        if ($prixlocation!= 0) 
        {
            $query->setParameter('prixMin', $prixlocation - 10000)
            ->setParameter('prixMax', $prixlocation + 20000);
        }

        return $query->getResult();
    }
}
